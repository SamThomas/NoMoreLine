package fr.ece.pfe_project.panel;

import fr.ece.pfe_project.database.DatabaseHelper;
import fr.ece.pfe_project.utils.GlobalVariableUtils;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author pierreghazal
 */
public class PlanPanel extends javax.swing.JPanel {

    private final List<String> alphabet
            = Arrays.asList("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
                    "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z");

    private final List<String> numbers
            = Arrays.asList("1", "2", "3", "4", "5", "6", "7", "8", "9", "10");

    private static final int COLUMN = 8;
    private static final int ROW = 2;

    private Integer indexPanel = 0;

    /**
     * Creates new form PlanPanel
     */
    public PlanPanel() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        Graphics2D g2d = (Graphics2D) g;

        g2d.drawImage(GlobalVariableUtils.getPlans().get(indexPanel).getImage(),
                0, 0, this.getWidth(), this.getHeight(), null);

        g2d.setPaint(Color.DARK_GRAY);
        g2d.setFont(new Font(g2d.getFont().getName(), Font.BOLD, 20));
        g2d.setStroke(new BasicStroke(2));

        int COLUMN_WIDTH = getSize().width / COLUMN;
        int ROW_HEIGHT = getSize().height / ROW;

        ArrayList<String> positions = new ArrayList<String>();

        // Colonnes
        for (int i = 1; i < COLUMN + 1; i++) {
            int x = i * COLUMN_WIDTH;
            g2d.drawLine(x, 0, x, getSize().height);
            g2d.drawString(alphabet.get(i - 1), x - COLUMN_WIDTH / 2, 15);
        }

        // Lignes
        for (int i = 1; i < ROW + 1; i++) {
            int y = i * ROW_HEIGHT;
            g2d.drawLine(0, y, getSize().width, y);
            g2d.drawString(numbers.get(i - 1), 10, y - ROW_HEIGHT / 2);
        }

        for (int i = 0; i < COLUMN; i++) {
            for (int j = 0; j < ROW; j++) {
                positions.add(alphabet.get(i) + numbers.get(j));
            }
        }

        DatabaseHelper.setAllPositionsPlan(positions);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
